# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

resources:
  containers:
  - container: u1904
    image: 'ubuntu:19.04'
    options: "--name ci-container"

jobs:
  - job: 'Clippy'
    pool:
      vmImage: 'ubuntu-latest'
    
    strategy:
      matrix:
        ubuntu1904:
          containerResource: u1904

    container: $[ variables['containerResource'] ]

    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
        displayName: Install rust
      - script: source $HOME/.profile && rustup component add clippy
        displayName: Install Clippy
      - script: source $HOME/.profile && cargo clippy --all
        displayName: Run clippy

  - job: 'Test'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      matrix:
        ubuntu1904:
          containerResource: u1904

    container: $[ variables['containerResource'] ]

    steps:
      - script: |
          /tmp/docker exec -t -u 0 ci-container \
          sh -c "apt-get update && apt-get -y install sudo"
        displayName: Set up sudo
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
        displayName: Install rust
      - script: |
          sudo apt install -y libcsfml-dev libsfml-dev
        displayName: Install SFML & CSFML bindings
      - script: cargo build --all
        displayName: Cargo build
      - script: RUST_TEST_THREADS=1 cargo test --all
        displayName: Cargo test

